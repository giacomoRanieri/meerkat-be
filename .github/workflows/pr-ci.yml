name: Pull Request CI

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black isort mypy
    
    - name: Python Build
      run: |
        python -m py_compile $(find . -name "*.py" -not -path "./venv/*" -not -path "./.venv/*")
        echo "✅ Python build successful"
    
    - name: Run Tests
      run: |
        pytest --cov=. --cov-report=xml --cov-report=html
        echo "✅ Tests passed"
    
    - name: Code Analysis
      run: |
        # Code formatting check
        black --check --diff .
        
        # Import sorting check
        isort --check-only --diff .
        
        # Linting
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
        # Type checking (optional, remove if no type hints)
        mypy . --ignore-missing-imports || echo "Type checking completed with warnings"
        
        echo "✅ Code analysis passed"
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}